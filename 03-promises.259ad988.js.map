{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,WAuChC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,aAAY,KACNN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAiBC,MAAU,GAEvDA,EAAM,G,CA9CbQ,QAAQC,IAAIhB,EAAKC,OAAOgB,SAASC,OAAOC,OAGxCnB,EAAKC,OAAOmB,iBAAiB,UAI7B,SAAuBC,GACrBA,EAAEC,iBAEF,MACEL,UAAYV,MAAAgB,EAAKC,KAAEA,EAAIN,OAAEA,IACvBG,EAAEI,cAEN,IAAIC,EAAW,EAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAOC,MAAOQ,GAAK,EACtCZ,QAAQa,IAAID,GACZD,EAAWC,EACXZ,QAAQa,IAAIF,GACZX,QAAQa,KAAKL,EAAMJ,OAEnBd,EAAcqB,EAAUH,GACrBM,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQa,IACN9B,EAAAgC,OAAOC,QAAQ,uBAAqBzB,QAAiBC,OAAW,IAGnEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBQ,QAAQa,IACN9B,EAAAgC,OAAOG,QAAQ,sBAAoB3B,QAAiBC,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnEl: document.querySelector('button'),\n};\n\nconsole.dir(refs.formEl.elements.amount.value);\n// const amount = refs.formEl.elements.amount.value;\n\nrefs.formEl.addEventListener('submit', onButtonClick);\n\n// refs.btnEl.addEventListener('submit', onButtonClick);\n\nfunction onButtonClick(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let position = 0;\n\n  for (let i = 0; i <= amount.value; i += 1) {\n    console.log(i);\n    position = i;\n    console.log(position);\n    console.log(+delay.value);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n//   });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","btnEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","console","dir","elements","amount","value","addEventListener","e","preventDefault","delay1","step","currentTarget","position1","i","log","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.259ad988.js.map"}